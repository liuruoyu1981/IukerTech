/// <reference path="../../Declare/Module/DataModule_Declare.ts" />

export class DataModule {

    /**
    * 使用指定的key设置一个Int32值。
    * @param {string} key - 数据键。
    * @param {number} newData - 数据值。
    */
    public static SetInt(key: string, newData: number): void {
        Iuker_DataModule_SetInt(key, newData);
    }

    /**
* 使用指定的key获取一个Int32值。
* @param {string} key - 数据键。
* @param {number} newData - 数据值。
*/
    public static GetInt(key: string): number {
        let value = Iuker_DataModule_GetInt(key);
        return value;
    }

    /**
    * 使用指定的key设置一个Int64值。
    * @param {string} key - 数据键。
    * @param {number} newData - 数据值。
    */
    public static SetLong(key: string, newData: number): void {
        Iuker_DataModule_SetLong(key, newData);
    }

    /**
* 使用指定的key获取一个Int64值。
* @param {string} key - 数据键。
* @param {number} newData - 数据值。
*/
    public static GetLong(key: string): number {
        let value = Iuker_DataModule_GetLong(key);
        return value;
    }

    /**
    * 使用指定的key设置一个字符串值。
    * @param {string} key - 数据键。
    * @param {number} newData - 数据值。
    */
    public static SetString(key: string, newData: string): void {
        Iuker_DataModule_SetString(key, newData);
    }

    /**
* 使用指定的key获取一个字符串值。
* @param {string} key - 数据键。
* @param {number} newData - 数据值。
*/
    public static GetString(key: string): string {
        let value = Iuker_DataModule_GetString(key);
        return value;
    }


    /**
* 使用指定的key设置一个浮点值。
* @param {string} key - 数据键。
* @param {number} newData - 数据值。
*/
    public static SetFloat(key: string, newData: number): void {
        Iuker_DataModule_SetFloat(key, newData);
    }

    /**
* 使用指定的key获取一个浮点值。
* @param {string} key - 数据键。
* @param {number} newData - 数据值。
*/
    public static GetFloat(key: string): number {
        let value = Iuker_DataModule_GetFloat(key);
        return value;
    }










}